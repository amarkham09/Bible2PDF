<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>509</string>
	<key>AMApplicationVersion</key>
	<string>2.10</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>-- This version should only be copied into Automator's "Run Applescript" block. To run in Script Editor, remove "on run...end run"-- After saving this script within Automator, the "Script Libraries" folder needs to be copied to Bible2PDF.app/Contents/Resources/ use scripting additionsuse script "Dialog Toolkit Plus" version "1.1.0"on run {input, parameters}	try		set keepRepeating to true		repeat while keepRepeating			set accViewWidth to 400			set {theButtons, minWidth} to create buttons {"Cancel", "OK"} default button 2 cancel button 1			if minWidth &gt; accViewWidth then set accViewWidth to minWidth -- make sure buttons fit			set {orientationMatrix, orientationLabel, theTop, matrixLeft} to create labeled matrix {"Portrait", "Landscape"} left inset 50 bottom 0 max width 300 matrix left 0 label text "Orientation:" initial choice 1 without arranged vertically			set {paperMatrix, paperLabel, theTop, matrixLeft} to create labeled matrix {"A4", "A3"} left inset 50 bottom (theTop + 8) max width 300 matrix left 0 label text "Paper size:" initial choice 1 without arranged vertically			set {theRule2, theTop} to create rule (theTop + 12) left inset 0 rule width 400			set {spacingField, spacingLabel, theTop, fieldLeft} to create side labeled field ("") placeholder text "Leave blank for default value" left inset 0 bottom (theTop + 8) total width 400 label text "Line spacing:" field left 0			set {fontField, fontLabel, theTop, fieldLeft} to create side labeled field ("") placeholder text "Leave blank for default value" left inset 0 bottom (theTop + 8) total width 400 label text "Font size:" field left 0			set {paddingField, paddingLabel, theTop, fieldLeft} to create side labeled field ("") placeholder text "Leave blank for default value" left inset 0 bottom (theTop + 8) total width 400 label text "Column padding:" field left 0			set {columnsField, columnsLabel, theTop, fieldLeft} to create side labeled field ("") placeholder text "Leave blank for default value" left inset 0 bottom (theTop + 8) total width 400 label text "Number of columns:" field left 0			set {bmarginField, bmarginLabel, theTop, fieldLeft} to create side labeled field ("") placeholder text "Leave blank for default value" left inset 0 bottom (theTop + 8) total width 400 label text "Bottom margin:" field left 0			set {tmarginField, tmarginLabel, theTop, fieldLeft} to create side labeled field ("") placeholder text "Leave blank for default value" left inset 0 bottom (theTop + 8) total width 400 label text "Top margin:" field left 0			set {rmarginField, rmarginLabel, theTop, fieldLeft} to create side labeled field ("") placeholder text "Leave blank for default value" left inset 0 bottom (theTop + 8) total width 400 label text "Right margin:" field left 0			set {lmarginField, lmarginLabel, theTop, fieldLeft} to create side labeled field ("") placeholder text "Leave blank for default value" left inset 0 bottom (theTop + 8) total width 400 label text "Left margin:" field left 0			set {theRule, theTop} to create rule (theTop + 12) left inset 0 rule width 400			set {referenceField, referenceLabel, theTop, fieldLeft} to create side labeled field ("") placeholder text "e.g. 1 Corinthians 15:1-11" left inset 0 bottom (theTop + 8) total width 400 label text "Bible reference:" field left 0						set allControls to {referenceField, referenceLabel, theRule, theRule2, orientationMatrix, orientationLabel, paperMatrix, paperLabel, lmarginField, lmarginLabel, rmarginField, rmarginLabel, tmarginField, tmarginLabel, bmarginField, bmarginLabel, columnsField, columnsLabel, paddingField, paddingLabel, fontField, fontLabel, spacingField, spacingLabel}			set {buttonName, controlsResults} to display enhanced window "Bible2PDF" acc view width accViewWidth acc view height theTop acc view controls allControls buttons theButtons active field referenceField with align cancel button			set bibleRef to item 1 of controlsResults			set blank to ""			if bibleRef is not equal to blank then set keepRepeating to false		end repeat				set myPath to POSIX path of ((path to me as text) &amp; "::")		set shellScript to myPath &amp; "venv/bin/python " &amp; myPath &amp; "bible2pdf.py " &amp; quote &amp; bibleRef &amp; quote &amp; space				set orientation to item 5 of controlsResults		if orientation is equal to "Portrait" then set shellScript to shellScript &amp; "-p" &amp; space		if orientation is equal to "Landscape" then set shellScript to shellScript &amp; "-l" &amp; space		set paperSize to item 7 of controlsResults		if paperSize is equal to "A3" then set shellScript to shellScript &amp; "-a3" &amp; space		if paperSize is equal to "A4" then set shellScript to shellScript &amp; "-a4" &amp; space		set leftMargin to item 9 of controlsResults		if leftMargin is not equal to blank then set shellScript to shellScript &amp; "-lm " &amp; leftMargin &amp; space		set rightMargin to item 11 of controlsResults		if rightMargin is not equal to blank then set shellScript to shellScript &amp; "-rm " &amp; rightMargin &amp; space		set topMargin to item 13 of controlsResults		if topMargin is not equal to blank then set shellScript to shellScript &amp; "-tm " &amp; topMargin &amp; space		set bottomMargin to item 15 of controlsResults		if bottomMargin is not equal to blank then set shellScript to shellScript &amp; "-bm " &amp; bottomMargin &amp; space		set numColumns to item 17 of controlsResults		if numColumns is not equal to blank then set shellScript to shellScript &amp; "-c " &amp; numColumns &amp; space		set colPadding to item 19 of controlsResults		if colPadding is not equal to blank then set shellScript to shellScript &amp; "-cp " &amp; colPadding &amp; space		set fontSize to item 21 of controlsResults		if fontSize is not equal to blank then set shellScript to shellScript &amp; "-f " &amp; fontSize &amp; space		set fontSpacing to item 23 of controlsResults		if fontSpacing is not equal to blank then set shellScript to shellScript &amp; "-s " &amp; fontSpacing &amp; space		--display dialog shellScript		do shell script shellScript	on error errMsg		display dialog (errMsg)	end tryend run</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>C60F5281-94E0-449B-915C-5F6CE7876A45</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>414F2848-2E06-49B0-AE62-ECE620408480</string>
				<key>UUID</key>
				<string>3D36F07D-C39D-4950-A206-390A852C69B0</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<integer>1</integer>
				<key>location</key>
				<string>473.500000:713.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>variables</key>
	<array>
		<dict>
			<key>UUID</key>
			<string>653D55AF-0039-4BA2-8549-51DEEBF8B4BD</string>
			<key>identifier</key>
			<string>com.apple.Automator.Variable.Text</string>
			<key>name</key>
			<string>Text</string>
			<key>value</key>
			<string>John 1:1-4:1</string>
		</dict>
	</array>
	<key>workflowMetaData</key>
	<dict>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.application</string>
	</dict>
</dict>
</plist>
